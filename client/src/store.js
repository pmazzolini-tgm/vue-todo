import Vue from 'vue';
import Vuex from 'vuex';

Vue.use(Vuex);

export default new Vuex.Store({
  strict: true,
  state: {
    todoLists: {
      1: {
        id: 1,
        name: 'example todo list',
        todos: [1, 2],
      },
      2: {
        id: 2,
        name: 'my second list',
        todos: [3, 4, 5, 6],
      },
    },
    todos: {
      1: {
        id: 1,
        title: 'my first todo item',
        completed: false,
      },
      2: {
        id: 2,
        title: 'my second todo item',
        completed: false,
      },
      3: {
        id: 3,
        title: 'my third todo item',
        completed: false,
      },
      4: {
        id: 4,
        title: 'my fourth todo item',
        completed: false,
      },
      5: {
        id: 5,
        title: 'my fifth completed todo item',
        completed: true,
      },
      6: {
        id: 6,
        title: 'my sixth completed todo item',
        completed: true,
      },
    },
  },
  mutations: {
    createTodoList(state, { name }) {
      // TODO: Use ID generated by server
      const nextId =
        Object.values(state.todoLists).reduce((prev, cur) => (prev.id > cur.id ? prev : cur)).id +
        1;
      Vue.set(state.todoLists, nextId, {
        id: nextId,
        name,
        todos: [],
      });
    },
    deleteTodoList(state, { id }) {
      Vue.delete(state.todoLists, id);
    },
    removeCompletedTodos(state, { todoListId }) {
      // TODO: implement
    },
    createTodo(state, { todoListId, title }) {
      const todoList = state.todoLists[todoListId];
      const nextId =
        Object.values(state.todos).reduce((prev, cur) => (prev.id > cur.id ? prev : cur)).id + 1;
      state.todos[nextId] = {
        id: nextId,
        title,
        completed: false,
      };
      todoList.todos.push(nextId);
    },
    toggleTodo(state, { id }) {
      state.todos[id].completed = !state.todos[id].completed;
    },
    updateTodo(state, { id, title }) {
      state.todos[id].title = title;
    },
    deleteTodo(state, { todoListId, id }) {
      state.todoLists[todoListId].todos =
        state.todoLists[todoListId].todos.filter(todoId => todoId !== id);
    },
  },
  actions: {},
});
